#!/bin/sh
POSIXLY_CORRECT=yes
com=false

while [ "$#" -gt 0 ];
do
case $1 in
list-ip)
    if [ "$com" = true ]; then
        echo "TOO MANY COMMANDS" >&2
        exit 1
    fi

    if [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    command="list-ip"
    com=true
    shift
    ;;
list-uri)
    if [ "$com" = true ]; then
        echo "TOO MANY COMMANDS" >&2
        exit 1
    fi

    if [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1
    fi

    command="list-uri"
    com=true
    shift
    ;;
list-hosts)
    if [ "$com" = true ]; then
        echo "TOO MANY COMMANDS" >&2
        exit 1
    fi

    if [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    command="list-hosts"
    com=true
    shift
    ;;
hist-ip)
    if [ "$com" = true ]; then
        echo "TOO MANY COMMANDS" >&2
        exit 1
    fi

    if [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1
    fi

    command="hist-ip"
    com=true
    shift
    ;;
hist-load)
    if [ "$com" = true ]; then
        echo "TOO MANY COMMANDS" >&2
        exit 1
    fi

    if [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    command="hist-load"
    com=true
    shift
    ;;
-a)
    if [ "$filtera" = "-a" ]; then
        echo "TOO MANY SAME FILTERS" >&2
        exit 1
    fi
    
    if [ -n "$command" ] || [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    filtera="-a"
    shift
    after="$1"
    num=$(printf "%s" "${after}" | awk -F: '{print NF-1}')
    if [ "$num" = 1 ]; then
    after="$after"":00"
    fi
    after=$(printf "%s" "$after" | grep -E "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$")
    if [ -z "$after" ]; then 
     echo "WRONG DATE/TIME" >&2
     exit 1
    fi
    after=$(printf "%s" "$after" | sed "s/[ :-]//g")
    shift
    ;;
-b)
    if [ "$filterb" = "-b" ]; then
        echo "TOO MANY SAME FILTERS" >&2
        exit 1
    fi

    if [ -n "$command" ] || [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    filterb="-b"
    shift
    before="$1"
    num=$(printf "%s" "${before}" | awk -F: '{print NF-1}')
    if [ "$num" = 1 ]; then
    before="$before"":00"
    fi
    before=$(printf "%s" "$before" | grep -E "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$")
    if [ -z "$before" ]; then 
     echo "WRONG DATE/TIME" >&2
     exit 1
    fi
    before=$(printf "%s" "$before" | sed "s/[ :-]//g")
    shift
    ;;
-ip)
    if [ "$filterip" = "-ip" ]; then
        echo "TOO MANY SAME FILTERS" >&2
        exit 1
    fi
   
    if [ -n "$command" ] || [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    filterip="-ip"
    shift
    IP="$1"                                                                          #IPv6                                                        #IPv4
    IP=$(printf "%s" "$IP" | grep -E '^([0-9A-Fa-f]{0,4}:){2,7}([0-9A-Fa-f]{1,4}$|((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4})$|^([0-9]{1,3}\.){3}[0-9]{1,3}$')
    if [ -z "$IP" ]; then 
     echo "WRONG IP" >&2
     exit 1
    fi
    shift
    ;;
-uri)
    if [ "$filteruri" = "-uri" ]; then
        echo "TOO MANY SAME FILTERS" >&2
        exit 1
    fi

    if [ -n "$command" ] || [ -n "$line" ]; then
    echo "WRONG ORDER OF ARGS" >&2 
    exit 1 
    fi

    filteruri="-uri"
    shift
    URI="$1"
    if [ -f "$URI" ];then
    echo "WRONG URI" >&2
    exit 1
    fi
    shift
    ;;
*.gz)
    if [ -f "$1" ]; then 
    help=$(gunzip -c "$1")
    if [ -z "$line" ]; then
    line="$help"
    else
    line="$line
    $help"
    fi
    else 
    echo "NOT A FILE" >&2 
    exit 1
    fi
    shift
    ;;
*)
    if [ -f "$1" ]; then 
    help=$(cat "$1")
    if [ -z "$line" ]; then
    line="$help"
    else
    line="$line
    $help"
    fi
    else 
    echo "NOT A FILE" >&2 
    exit 1
    fi
    shift
    ;;
esac
done

if [ -z "$line" ]; then
line=$(cat -)
fi

test=$(printf %s "$line" |
while read -r LINE || [ -n "$LINE" ]; do
  #narezanie si riadku na časti 
    
    if [ -n "$filtera" ] || [ -n "$filterb" ]; then
    part_date=$(printf "%s" "$LINE" | cut -d ' ' -f4)
    part_date=${part_date#?}
    part_date=$(printf "%s" "$part_date" | awk -F ":" '{print $2$3$4,$1}' | awk -F "/" '{print $3,$2,$1}')
    part_date=$(printf "%s" "$part_date" | awk -F " " '{print $1$2$4$3}' | sed "s/[\/: ]//g" | cut -d '/' -f2 | sed "s/Jan/01/g;s/Feb/02/g;s/Mar/03/g;s/Apr/04/g;s/May/05/g;s/Jun/06/g;s/Jul/07/g;
    s/Aug/08/g;s/Sep/09/g;s/Oct/1O/g;s/Nov/11/g;s/Dec/12/g")
    fi

     #IP FILTER
    if [ "$filterip" = "-ip" ]; then
    LINE=$(printf "%s" "$LINE" | awk -vip="$IP" '{if ($1 == ip) print}')
    fi
 
    #-a FILTER
    if [ "$filtera" = "-a" ]; then
    LINE=$(printf "%s" "$LINE" | awk -vDate="$after" -vLogDate="$part_date" '{ if (LogDate > Date) print}')
    fi

    #-b FILTER
    if [ "$filterb" = "-b" ]; then
    LINE=$(printf "%s" "$LINE" | awk -vDate="$before" -vLogDate="$part_date" '{ if (LogDate < Date) print}')
    fi

    #-uri FILTER
    if [ "$filteruri" = "-uri" ]; then
    help=$(printf "%s" "$LINE" | cut -d ' ' -f7 | grep -E "$URI")
    if [ -n "$help" ]; then
    LINE=$(printf "%s" "$LINE")
    else
    continue
    fi
    fi

    #NO COMMAND
    if [ -z "$command" ]; then
    [ -z "$LINE" ] && continue
    printf "%s" "$LINE"
    echo
    fi
 
    #COMMAND LIST URI
    if [ "$command" = "list-uri" ]; then
    [ -z "$LINE" ] && continue
    if [ -n "$LINE" ]; then
    LINE=$(printf "%s" "$LINE" | awk '{if ($6 == "\"GET" || $6 == "\"PATCH" || $6 == "\"POST" || $6 == "\"HEAD" || $6 == "\"PUT" || $6 == "\"DELETE" || $6 == "\"TRACE" ||
    $6 == "\"CONNECT" || $6 == "\"OPTIONS") print $7}')
    if [ -n "$LINE" ]; then
    printf "%s" "$LINE"
    echo
    fi
    fi
    fi
    #COMMAND LIST IP
    if [ "$command" = "list-ip" ]; then
    [ -z "$LINE" ] && continue
    LINE=$(printf "%s" "$LINE" | cut -d ' ' -f1 | sed "s/[\"]//g")
    [ -z "$LINE" ] && continue
    printf "%s" "$LINE"
    echo
    fi
 
    #COMMAND LIST HOSTS
    if [ "$command" = "list-hosts" ]; then
    [ -z "$LINE" ] && continue
 
    LINE=$(echo "$LINE" | cut -d ' ' -f1 | sed "s/[\"]//g")
    hostlist=$(host "$LINE" | cut -d ' ' -f5)
    if [ "$hostlist" = "3(NXDOMAIN)" ] || [ "$hostlist" = "2(SERVFAIL)" ] || [ "$hostlist" = "no" ]; then
    printf "%s" "$LINE" | cut -d ' ' -f1 
    echo
    else
    hostlist=$(echo "$hostlist" | sed "s/for//g" | sed '/^[[:space:]]*$/d')
    printf "%s" "$hostlist"
    echo
    fi
    fi

    #COMMAND HIST IP
    if [ "$command" = "hist-ip" ]; then
    [ -z "$LINE" ] && continue
 
    LINE=$(printf "%s" "$LINE" | cut -d ' ' -f1 | sed "s/[\"]//g")
    [ -z "$LINE" ] && continue
    printf "%s" "$LINE"
    echo
    fi

    #COMMAND HIST LOAD
    if [ "$command" = "hist-load" ]; then
    [ -z "$LINE" ] && continue
 
    part_date=$(printf "%s" "$LINE" | cut -d ' ' -f4)
    printf "%s" "${part_date#?}"
    echo
    fi

done )

if [ "$command" = "list-ip" ] || [ "$command" = "list-hosts" ] || [ "$command" = "list-uri" ]; then
test=$(printf "%s" "$test" | sort | uniq )
fi

if [ "$command" = "hist-ip" ]; then
test=$(printf "%s" "$test" | sort | uniq -c | awk '{print $2,$1}' | sort -nrk2 | awk '{ s=" ";hist=$2;while (hist-->0) s=s"#";printf "%-10s %s\n",$1,"("$2"):"s }' )
fi

if [ "$command" = "hist-load" ]; then
test=$(printf "%s" "$test" | sed "s/[\/:]/ /g" | sed "s/Jan/01/g;s/Feb/02/g;s/Mar/03/g;s/Apr/04/g;s/May/05/g;s/Jun/06/g;s/Jul/07/g;
    s/Aug/08/g;s/Sep/09/g;s/Oct/1O/g;s/Nov/11/g;s/Dec/12/g" | awk '{print $3"-"$2"-"$1,$4}' | sort | uniq -c | awk '{print $2,$3":00",$1}' | awk '{ s=" ";hist=$3;while (hist-->0) s=s"#";printf "%-10s %s\n",$1,$2" ("$3"):"s }' )
fi

if [ -n "$test" ]; then  
printf "%s" "$test" | sed '/^$/d'
echo
fi